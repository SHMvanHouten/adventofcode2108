#ip 2    a b c
0:  addi 2 16 2   (r2 = 16)                      [1,0,0,0,0,0] -> [1,0,16,0,0,0]
1:  seti 1 0 1    (r1 = 1)                       [0,0,1,0,10550400,10551382] -> [0,1,1,0,10550400,10551382]
2:  seti 1 4 3    (r3 = 1)                       [0,1,2,0,10550400,10551382] -> [0,1,2,1,10550400,10551382]
3:  mulr 1 3 4    (r4 = r1 * r3)                 [0,1,3,1,10550400,10551382] -> [0,1,3,1,1,10551382]
4:  eqrr 4 5 4    (r4 == r5 ? r4 = 1 : r4 = 0)   [0,1,4,1,10550400,10551382] -> [0,1,4,1,0,10551382]
5:  addr 4 2 2    (r2 += r4)                     [0,1,5,1,0,10551382] -> [0,1,5,1,0,10551382]
6:  addi 2 1 2    (r2 += 1)                      [0,1,6,1,0,10551382] -> [0,1,7,1,0,10551382]
7:  addr 1 0 0   --- (r0 += r1)
8:  addi 3 1 3    (r3 += 1)                      [0,1,8,1,0,10551382] -> [0,1,8,4,0,10551382]
9:  gtrr 3 5 4    (r3 > r5? r4=1:r4=0)           [0,1,9,4,0,10551382] -> [0,1,9,4,0,10551382]
10: addr 2 4 2    (r2 += r4)                     [0,1,10,4,0,10551382] -> [0,1,2,4,0,10551382] (add 3 to r3 until r3 > 10551382)
11: seti 2 5 2    (r2 = 2)
12: addi 1 1 1
13: gtrr 1 5 4
14: addr 4 2 2
15: seti 1 1 2
16: mulr 2 2 2
17: addi 5 2 5  (r5 += 2)                        [1,0,17,0,0,0] -> [1,0,17,0,0,2]
18: mulr 5 5 5  (r5 = r5^2)                      [1,0,18,0,0,2] -> [1,0,18,0,0,4]
19: mulr 2 5 5  (r5 = 19 * r5)                   [1,0,19,0,0,4] -> [1,0,19,0,0,76]
20: muli 5 11 5 (r5 = 11 * r5)                   [1,0,20,0,0,76] -> [1,0,20,0,0,836]
21: addi 4 5 4  (r4 += 5)                        [1,0,21,0,0,836] -> [1,0,21,0,5,836]
22: mulr 4 2 4  (r4 = 22 * r4)                   [1,0,22,0,5,836] -> [1,0,22,0,110,836]
23: addi 4 9 4  (r4 += 9)                        [1,0,23,0,110,836] -> [1,0,23,0,119,836]
24: addr 5 4 5  (r5 += r4)                       [1,0,24,0,119,836] -> [1,0,24,0,119,955]
25: addr 2 0 2  (r2 += r0)                       [1,0,25,0,119,955] -> [1,0,26,0,119,955]
26: seti 0 0 2  --- (r2 = r0)
27: setr 2 3 4  (r4 = 27)                        [1,0,27,0,119,955] -> [1,0,27,0,27,955]
28: mulr 4 2 4  (r4 = 28 * r4)                   [1,0,28,0,27,955] -> [1,0,28,0,756,955]
29: addr 2 4 4  (r4 += 29)                       [1,0,29,0,756,955] -> [1,0,29,0,785,955]
30: mulr 2 4 4  (r4 = 30 * r4)                   [1,0,30,0,785,955] -> [1,0,30,0,23550,955]
31: muli 4 14 4 (r4 = 14 * r4)                   [1,0,31,0,23550,955] -> [1,0,31,0,329700,955]
32: mulr 4 2 4  (r4 = 32 * r4)                   [1,0,32,0,329700,955] -> [1,0,32,0,10550400,955]
33: addr 5 4 5  (r5 += r4)                       [1,0,33,0,10550400,955] -> [1,0,33,0,10550400,10551355]
34: seti 0 6 0  (r0 = 0)                         [1,0,34,0,10550400,10551355] -> [0,0,34,0,10550400,10551355]
35: seti 0 3 2  (r2 = 0)                         [0,0,35,0,10550400,10551355] -> [0,0,0,0,10550400,10551355]

r3 += 1 until r1 * r3 == r5
r1 + 1 when r3 > r5
when r1 * r3 == r5 add r1 to r0
therefore answer is the sum of 1, 5, 499, 2495, 4229, 21145, 2110271, 10551355